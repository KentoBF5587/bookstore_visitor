<%= form_with(model: bookstore, local: true) do |f| %>
    <%= render "shared/error_messages", object: f.object %>
    <div class="mb-3">
      <%= f.label :name, class: "form-label" %>
      <%= f.text_field :name, id: "Name", class: "form-control" %>
    </div>
    <div class="mb-3">
      <%= f.label :address, class: "form-label" %>
      <%= f.text_field :address, id: "Address", class: "form-control" %>
    </div>
    
    <script>
    (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
      key: '<%= ENV['GOOGLE_MAPS_API_KEY'] %>',
      libraries: 'places',
      callback: 'initialize',
      // Add other bootstrap parameters as needed, using camel case.
      // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)
    });
    </script>

    <div class="mb-3">
      <p>この本屋さんに当てはまるものを選んでください（複数選択可）</p>
      <%= f.collection_check_boxes :tag_ids, Tag.all, :id, :name, {}, { multiple: true, name: "bookstore[tag_ids][]" } %>
    </div>
    <div data-turbo="false">
    <%= f.submit nil, class: "btn btn-success" %>
    </div>
    <% end %>